version: '3.8'

services:
  app:
    image: todo-frontend
    build:
      context: ./todo-frontend # The context will pick this directory as the "build context"
      dockerfile: Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend/:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    #    ports:
    #      - 5173:5173
    container_name: todo-frontend-prod # This will name the container todo-frontend-prod

  server:
    image: todo-backend
    build:
      context: ./todo-backend # The context will pick this directory as the "build context"
      dockerfile: Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-backend:/usr/src/app
    #    ports:
    #      - 3000:3000
    env_file:
      - .env
    environment:
      - REDIS_URL=${REDIS_URL} # redis://redis:6379
      - MONGO_URL=${MONGO_URL} # mongodb://the_username:the_password@mongo:27017/the_database
    container_name: todo-backend-prod # This will name the container todo-backend-prod

  mongo:
    image: mongo
    ports:
      - 3456:27017
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - mongo_data:/data/db

  redis:
    image: redis
    ports:
      - 6379:6379
    command: [ 'redis-server', '--appendonly', 'yes' ] # Overwrite the CMD
    volumes: # Declare the volume
      - ./todo-backend/redis_data:/data

  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8081:80
    container_name: reverse-proxy
    depends_on:
      - app # wait for the frontend container to be started


volumes:
  mongo_data:
